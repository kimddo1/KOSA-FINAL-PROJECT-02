version: '3.8'

services:
  mysql:
    image: mysql:8.0
    container_name: mysql_local
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: kocruit_db
      MYSQL_USER: myuser
      MYSQL_PASSWORD: 1234
      MYSQL_CHARACTER_SET_SERVER: utf8mb4
      MYSQL_COLLATION_SERVER: utf8mb4_unicode_ci
    command: --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci --default-authentication-plugin=mysql_native_password
    volumes:
      - mysql_data_local:/var/lib/mysql
      - ./initdb:/docker-entrypoint-initdb.d
    ports:
      - "3308:3306"
    networks:
      - app-net-local
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 5s

  backend_local:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: kocruit_fastapi_local
    ports:
      - "8002:8000"
    environment:
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: kocruit_db
      DB_USER: myuser
      DB_PASSWORD: 1234
    depends_on:
      mysql:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - ./agent:/app/agent
      - ./initdb:/docker-entrypoint-initdb.d
    networks:
      - app-net-local
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend_local:
    image: node:18-alpine
    container_name: kocruit_react_local
    working_dir: /app
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5174:5173"
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: sh -c "npm install && npm run dev -- --host"
    networks:
      - app-net-local

  redis_local:
    image: redis:7.2-alpine
    container_name: kosa-redis_local
    command: redis-server --maxmemory 512mb --maxmemory-policy allkeys-lru --save 900 1 --save 300 10 --save 60 10000
    ports:
      - "6380:6379"
    volumes:
      - redis_data_local:/data
      - ./redis.conf:/usr/local/etc/redis/redis.conf
    restart: always
    networks:
      - app-net-local
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  mysql_data_local:
  redis_data_local:

networks:
  app-net-local:
    driver: bridge 